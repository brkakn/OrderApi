version: '3.4'

services:
  redis:
    hostname: "redis"
    container_name: "redis"
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "6379:6379"
    #networks:
    #  - order-networks

  rabbitmq:
    hostname: "rabbitmq"
    container_name: "rabbitmq"
    image: "rabbitmq:3-management"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    #networks:
    #  - order-networks

  order:
    image: ${DOCKER_REGISTRY-}order
    build:
      context: .
      dockerfile: src/OrderApi/Dockerfile
    restart: on-failure
    depends_on:
      - "rabbitmq"
    #networks:
    #  - order-networks

networks:
  order-networks:
    driver: bridge
